{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;AASA,IAAI,YAAY,GAAG,iFAAiF,CAAA;;AAEpG,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,CAAC,EAAK;AAC3B,SAAO,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,KAAK,EAAa;sCAAR,IAAI;AAAJ,UAAI;;;AAC9C,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA;AACzC,QAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,KAAK,qEAAqE,CAAA;KACrF;AACD,WAAO,MAAM,CAAC,CAAC,CAAC,CAAA;GACjB,CAAC,CAAA;CACH,CAAA","file":"bundle.js","sourcesContent":["/* Regex test cases:\n  one-and'/two.\n  one-andâ€™/two!\n  one-and/two?\n  $100/200/300!\n  This is a one/two/three punch!\n  one / two\n  10/100/1,000\n*/\nvar choicesRegex = /([^\\/\\s$]*[^\\/\\s.,;?!])\\/([^\\/\\s$]*[^\\/\\s.,;?!])(?:\\/([^\\/\\s$]*[^\\/\\s.,;?!]))*/g\n\nmodule.exports = (str, n) => {\n  return str.replace(choicesRegex, (match, ...rest)=> {\n    var groups = rest.slice(0, rest.length-2)\n    if(n >= groups.length) {\n      throw new Error(`Cannot select option {n} from {groups.length} options ({groups}).`)\n    }\n    return groups[n]\n  })\n}\n"],"sourceRoot":"/source/"}